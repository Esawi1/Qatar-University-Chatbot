name: Deploy Qatar University Chatbot to Azure

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov flake8
    
    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Test with pytest
      run: |
        pytest --cov=. --cov-report=xml
      env:
        AZURE_OPENAI_API_KEY: ${{ secrets.AZURE_OPENAI_API_KEY }}
        COSMOS_KEY: ${{ secrets.COSMOS_KEY }}
        SEARCH_API_KEY: ${{ secrets.SEARCH_API_KEY }}
        STORAGE_CONNECTION_STRING: ${{ secrets.STORAGE_CONNECTION_STRING }}
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Create deployment package
      run: |
        # Create deployment package excluding unnecessary files
        zip -r deployment.zip . -x "*.git*" "*.github*" "venv/*" "*.env*" "*.log" "*.pyc" "__pycache__/*" "*.DS_Store" "*.tmp"
    
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'qatar-university-chatbot'
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: deployment.zip
    
    - name: Configure App Settings
      uses: azure/CLI@v1
      with:
        inlineScript: |
          az webapp config appsettings set --resource-group qatar-chatbot-rg --name qatar-university-chatbot --settings \
            AZURE_OPENAI_ENDPOINT="${{ secrets.AZURE_OPENAI_ENDPOINT }}" \
            AZURE_OPENAI_API_KEY="${{ secrets.AZURE_OPENAI_API_KEY }}" \
            AZURE_OPENAI_DEPLOYMENT_NAME="${{ secrets.AZURE_OPENAI_DEPLOYMENT_NAME }}" \
            COSMOS_ENDPOINT="${{ secrets.COSMOS_ENDPOINT }}" \
            COSMOS_KEY="${{ secrets.COSMOS_KEY }}" \
            COSMOS_DB="${{ secrets.COSMOS_DB }}" \
            COSMOS_CONTAINER="${{ secrets.COSMOS_CONTAINER }}" \
            SEARCH_ENDPOINT="${{ secrets.SEARCH_ENDPOINT }}" \
            SEARCH_API_KEY="${{ secrets.SEARCH_API_KEY }}" \
            SEARCH_INDEX="${{ secrets.SEARCH_INDEX }}" \
            STORAGE_CONNECTION_STRING="${{ secrets.STORAGE_CONNECTION_STRING }}"
